{
    "swagger": "2.0",
    "info": {
        "description": "This is a Swagger for a Node.js Api about superheroes",
        "version": "1.0.0",
        "title": "Swagger MyHero",
        "contact": {
            "email": "m.mercedes.perea@gmail.com"
        }
    },
    "host": "backendmyhero.eu-gb.mybluemix.net",
    "basePath": "/api",
    "tags": [
        {
            "name": "user",
            "description": "Operations about user"
        },
        {
            "name": "auth",
            "description": "Access to App"
        },
        {
            "name": "hero",
            "description": "Operations about Heros"
        },
        {
            "name": "userHero",
            "description": "Operations about the relathionship User/heroes"
        },
        {
            "name": "team",
            "description": "Operations about teams"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/hero/getByid/{idHero}": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring a Hero by id",
                "description": "Bring all the information about a Hero",
                "operationId": "GetHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idHero",
                        "description": "id of the hero",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "Id must be sent"
                    }
                }
            }
        },
        "/hero/stats/mostIntelligence": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero most intelligent",
                "description": "Bring the hero most intelligent",
                "operationId": "GetHeroIntelligent",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/stats/mostStrength": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero mostStrength",
                "description": "Bring the hero mostStrength",
                "operationId": "GetmostStrength",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/stats/mostSpeed": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero mostSpeed",
                "description": "Bring the hero mostSpeed",
                "operationId": "GetHeromostSpeed",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/stats/mostDurability": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero mostDurability",
                "description": "Bring the hero mostDurability",
                "operationId": "GetHeromostDurability",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/stats/mostPower": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero mostPower",
                "description": "Bring the hero mostPower",
                "operationId": "GetHeromostPower",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/stats/mostCombat": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the hero mostCombat",
                "description": "Bring the hero mostCombat",
                "operationId": "GetHeromostCombat",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/new/heros": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring the last heroes in the app",
                "description": "Bring the last heroes in the app",
                "operationId": "GetlastHeroes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/all/MarvelHeroes": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring all MarvelHeroes",
                "description": "Bring all MarvelHeroess in the app",
                "operationId": "allMarvelHeroes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/all/DCHeroes": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring all DCHeroes in the app",
                "description": "Bring all DCHeroes in the app",
                "operationId": "allDCHeroes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/hero/img/profileImgHeroes": {
            "get": {
                "tags": [
                    "hero"
                ],
                "summary": "Bring profile avatar in the app",
                "description": "Bring profile avatar in the app",
                "operationId": "profileAvatar",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/userHero/allHerosFav/{idUsu}": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Bring all favorites heroes from the user",
                "description": "Bring all favorites heroes from the user",
                "operationId": "getFav",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idUsu",
                        "description": "id of the User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "Id must be sent"
                    }
                }
            }
        },
        "/userHero/allHerosFoll/{idUsu}": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Bring all follow heroes from the user",
                "description": "Bring all follow heroes from the user",
                "operationId": "getFoll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idUsu",
                        "description": "id of the User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Hero"
                        }
                    },
                    "400": {
                        "description": "Id must be sent"
                    }
                }
            }
        },
        "/userHero/bestMarverHero": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Bring the best Marvel Heroe",
                "description": "Bring the marvel hero with more votes ",
                "operationId": "bestMarverHero",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/userHero/bestDCHero": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Bring the best DC Heroe",
                "description": "Bring the DC hero with more votes ",
                "operationId": "bestDCHero",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/userHero/mostFollowHeros": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Bring heroes with more followers",
                "description": "Bring heroes with more followers",
                "operationId": "mostFollowHeros",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hero"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no heros"
                    }
                }
            }
        },
        "/userHero/getHeroUsu/{idUsu}/{idHero}": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Get the relationship of the hero and the user",
                "description": "Get the relationship of the hero and the user",
                "operationId": "getHeroUsu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idUsu",
                        "description": "id of the User",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "path",
                        "name": "idHero",
                        "description": "id of the Hero",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/userHero"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/userHero/getHeroComments/{idHero}": {
            "get": {
                "tags": [
                    "userHero"
                ],
                "summary": "Get all the comments from a hero",
                "description": "Get all the comments from a hero",
                "operationId": "getHeroComments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idHero",
                        "description": "id of the User",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/userHero/followHero": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "Follow a hero",
                "description": "Follow a hero",
                "operationId": "followHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Follow a hero",
                        "required": [
                            "idUsu",
                            "idHero"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/unfollowHero": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "Unfollow a hero",
                "description": "Unfollow a hero",
                "operationId": "unfollowHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Unfollow a hero",
                        "required": [
                            "idUsu",
                            "idHero"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/favorite": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "favorite a hero",
                "description": "favorite a hero",
                "operationId": "favorite",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "favorite a hero",
                        "required": [
                            "idUsu",
                            "idHero"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/unfavorite": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "unfavorite a hero",
                "description": "unfavorite a hero",
                "operationId": "unfavorite",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "unfavorite a hero",
                        "required": [
                            "idUsu",
                            "idHero"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/voteHero": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "Vote a hero",
                "description": "Vote a hero",
                "operationId": "voteHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Vote a hero",
                        "required": [
                            "idUsu",
                            "idHero",
                            "score"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            },
                            "score": {
                                "type": "number",
                                "desciption": "score"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/commentHero": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "comment a hero",
                "description": "comment a hero",
                "operationId": "commentHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "comment a hero",
                        "required": [
                            "idUsu",
                            "idHero",
                            "comment"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            },
                            "comment": {
                                "type": "string",
                                "desciption": "comment"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/userHero/deleteCHero": {
            "put": {
                "tags": [
                    "userHero"
                ],
                "summary": "Delete comment a hero",
                "description": "Delete comment a hero",
                "operationId": "deleteCHero",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Delete comment a hero",
                        "required": [
                            "idUsu",
                            "idHero"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "idHero": {
                                "type": "number",
                                "desciption": "id Hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/team/bestTeam": {
            "get": {
                "tags": [
                    "team"
                ],
                "summary": "Get team with higher stats",
                "description": "Get team with higher stats",
                "operationId": "bestTeam",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/team/getTeamInfo/{idUsu}": {
            "get": {
                "tags": [
                    "team"
                ],
                "summary": "Get basic info user Team",
                "description": "Get basic info user team",
                "operationId": "GetTeamInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idUsu",
                        "description": "id of the User",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/team"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/team/createTeam": {
            "post": {
                "tags": [
                    "team"
                ],
                "summary": "Create a team",
                "description": "Create a team",
                "operationId": "createTeam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "comment a hero",
                        "required": [
                            "idUsu",
                            "teamName"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "number",
                                "desciption": "id User"
                            },
                            "teamName": {
                                "type": "string",
                                "desciption": "Team name"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/team/chageName/{idTeam}": {
            "put": {
                "tags": [
                    "team"
                ],
                "summary": "change team name",
                "description": "change team name",
                "operationId": "changeTeamName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idTeam",
                        "in": "path",
                        "description": "id Team",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "teamName",
                        "required": [
                            "teamName"
                        ],
                        "properties": {
                            "teamName": {
                                "type": "string",
                                "desciption": "team Name"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/team/addMember/{idTeam}": {
            "put": {
                "tags": [
                    "team"
                ],
                "summary": "Add member in the team",
                "description": "Add member in the team",
                "operationId": "addMember",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idTeam",
                        "in": "path",
                        "description": "id Team",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Member position ej.member_1 and cod Hero",
                        "required": [
                            "member",
                            "codHero"
                        ],
                        "properties": {
                            "member": {
                                "type": "string",
                                "desciption": "member in the team, ex. member_1"
                            },
                            "codHero": {
                                "type": "string",
                                "desciption": "id hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/team/deleteMember/{idTeam}": {
            "put": {
                "tags": [
                    "team"
                ],
                "summary": "Delete member in the team",
                "description": "Delete member in the team",
                "operationId": "deleteMember",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idTeam",
                        "in": "path",
                        "description": "id Team",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Member position ej.member_1 and cod Hero",
                        "required": [
                            "member",
                            "codHero"
                        ],
                        "properties": {
                            "member": {
                                "type": "string",
                                "desciption": "member in the team, ex. member_1"
                            },
                            "codHero": {
                                "type": "string",
                                "desciption": "id hero"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/team/{idTeam}": {
            "delete": {
                "tags": [
                    "team"
                ],
                "summary": "Delete team",
                "description": "",
                "operationId": "Delete team",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idTeam",
                        "in": "path",
                        "description": "Team id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "team not found"
                    }
                }
            }
        },
        "/user/{idUsu}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user information",
                "description": "Get user information",
                "operationId": "getUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "name must be sent"
                    }
                }
            }
        },
        "/user/getUserByName/{userName}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user information",
                "description": "Get user information",
                "operationId": "getUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "user Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/user/checkFollow/{idUsu}/{idUnfollow}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "check whether a user is being followed",
                "description": "check whether a user is being followed",
                "operationId": "checkFollow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "idUnfollow",
                        "in": "path",
                        "description": "id user follow",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Ids must be sent"
                    }
                }
            }
        },
        "/user/getFollowUsers/{idUsu}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get all the users you follow",
                "description": "Get all the users you follow",
                "operationId": "getFollowUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "name must be sent"
                    }
                }
            }
        },
        "/user/getFollowersUsers/{idUsu}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get all the users who follow you",
                "description": "Get all the users who follow you",
                "operationId": "getFollowersUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "name must be sent"
                    }
                }
            }
        },
        "/user/{idUsu}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "update a user",
                "description": "update a user",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "update a user",
                        "required": [
                            "email",
                            "userName",
                            "alias",
                            "surname",
                            "dateOfBirth"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "userName": {
                                "type": "string",
                                "desciption": "userName"
                            },
                            "alias": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "surname": {
                                "type": "string",
                                "desciption": "surname"
                            },
                            "dateOfBirth": {
                                "type": "string",
                                "format": "date-time",
                                "desciption": "date Of Birth"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "ids must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/user/newpass/{idUsu}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "user new pass",
                "description": "user new pass",
                "operationId": "newpass",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "passwords",
                        "required": [
                            "email",
                            "password",
                            "newPassword"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "password": {
                                "type": "string",
                                "desciption": "old password"
                            },
                            "newPassword": {
                                "type": "string",
                                "desciption": "new password"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "information must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/user/newImg/user": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "user new img",
                "description": "user new img",
                "operationId": "newImg",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "img and id User",
                        "required": [
                            "img",
                            "idUsu"
                        ],
                        "properties": {
                            "img": {
                                "type": "string",
                                "desciption": "img url"
                            },
                            "idUsu": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "information must be sent"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/user/deleteUser/{idUsu}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Delete a user",
                "description": "Delete a user",
                "operationId": "DeleteUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "id User",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "comment a hero",
                        "required": [
                            "email",
                            "password"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "password": {
                                "type": "string",
                                "desciption": "old password"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/user/followUser": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Follow a user",
                "description": "Follow a user",
                "operationId": "followUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "comment a hero",
                        "required": [
                            "idUsu",
                            "idUsuFollow"
                        ],
                        "properties": {
                            "idUsu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "idUsuFollow": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/user/unFollowUser/{idUsu}/{idUnfollow}": {
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Unfollow a user",
                "description": "Unfollow a user",
                "operationId": "unFollowUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUsu",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "idUnfollow",
                        "in": "path",
                        "description": "id user Unfollow",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "team not found"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "signup user",
                "description": "signup user",
                "operationId": "signupUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "sign up a user",
                        "required": [
                            "email",
                            "password",
                            "alias"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "password": {
                                "type": "string",
                                "desciption": "password"
                            },
                            "alias": {
                                "type": "string",
                                "desciption": "alias"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "signin user",
                "description": "signin user",
                "operationId": "signinUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "sign in a user",
                        "required": [
                            "email",
                            "password"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "desciption": "email"
                            },
                            "password": {
                                "type": "string",
                                "desciption": "password"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    },
    "definitions": {
        "Hero": {
            "type": "object",
            "properties": {
                "idHero": {
                    "type": "integer",
                    "format": "int64"
                },
                "HeroName": {
                    "type": "string",
                    "description": "Hero name"
                },
                "image": {
                    "type": "string",
                    "description": "Hero image"
                },
                "intelligence": {
                    "type": "integer",
                    "format": "int64"
                },
                "strength": {
                    "type": "integer",
                    "format": "int64"
                },
                "speed": {
                    "type": "integer",
                    "format": "int64"
                },
                "durability": {
                    "type": "integer",
                    "format": "int64"
                },
                "power": {
                    "type": "integer",
                    "format": "int64"
                },
                "combat": {
                    "type": "integer",
                    "format": "int64"
                },
                "fullName": {
                    "type": "string",
                    "description": "Hero full name"
                },
                "placeOfBirth": {
                    "type": "string",
                    "description": "place Of Birth"
                },
                "publisher": {
                    "type": "string",
                    "description": "publisher"
                },
                "alignment": {
                    "type": "string",
                    "description": "alignment"
                },
                "firstApperance": {
                    "type": "string",
                    "description": "firstApperance"
                },
                "gender": {
                    "type": "string",
                    "description": "gender"
                },
                "race": {
                    "type": "string",
                    "description": "race"
                },
                "height": {
                    "type": "string",
                    "description": "height"
                },
                "weight": {
                    "type": "string",
                    "description": "weight"
                },
                "eyeColor": {
                    "type": "string",
                    "description": "eyeColor"
                },
                "hairColor": {
                    "type": "string",
                    "description": "hairColor"
                },
                "work": {
                    "type": "string",
                    "description": "work"
                },
                "biography": {
                    "type": "string",
                    "description": "biography"
                },
                "createDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "userHero": {
            "type": "object",
            "properties": {
                "idUsu": {
                    "type": "integer",
                    "format": "int64"
                },
                "idHero": {
                    "type": "integer",
                    "format": "int64"
                },
                "score": {
                    "type": "integer",
                    "format": "int64"
                },
                "comment": {
                    "type": "string"
                },
                "favorite": {
                    "type": "integer",
                    "format": "int64"
                },
                "follow": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "team": {
            "type": "object",
            "properties": {
                "idTeam": {
                    "type": "integer",
                    "format": "int64"
                },
                "idUsu": {
                    "type": "integer",
                    "format": "int64"
                },
                "teamName": {
                    "type": "string"
                },
                "member_1": {
                    "type": "integer",
                    "format": "int64"
                },
                "member_2": {
                    "type": "integer",
                    "format": "int64"
                },
                "member_3": {
                    "type": "integer",
                    "format": "int64"
                },
                "member_4": {
                    "type": "integer",
                    "format": "int64"
                },
                "member_5": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "idUsu": {
                    "type": "integer",
                    "format": "int64"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "admin": {
                    "type": "string"
                }
            }
        }
    }
}